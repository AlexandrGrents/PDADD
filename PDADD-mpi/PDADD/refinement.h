/*
	Александр Гренц (2019 г)
	Версия параллельного алгоритма поиска диссонансов во временном ряде  PDADD для 1 узла с 1 ядром - модуль фазы отсеивания кандидатов
	Предназначен для поиска диссонансов среди кандидатов в диссонансы

	Функции:
		findDiscords - предназначена для параллельного отсеивания кандидатов в диссоансы (и поиска среди них диссонансов)
		getDiscords - предназначена для формирования окончательного списка диссонансов
		refinement - предназначена для реализации фазы отсеивания диссонансов. Содержит в себе подготовку данных для параллельного поиска диссонансов, 
			параллельный поиск, формирования итогового списка диссонансов
*/

/*
findDiscords
	Предназначена для параллельного отсеивания кандидатов в диссоансы (и поиска среди них диссонансов)
	Входные данные: матрица подпоследовательностей S, матрица кандидатов С, список кандидатов Candidats, диапазон определения диссонанса r, 
		указатель на матрицу для хранения информации о кандидатах B (битовая карта)
	Выходные данные: матрица B, содержащая информацию о кандидатах (если вся строка состоит из true, значит кандидат прошёл проверку)
*/
void findDiscords(float **S, float *C, int * Candidats, float r, int N, int n, int H, int p, bool **B, int add);

/*
getDiscords
	Предназначена для формирования окончательного списка диссонансов
	Входные данные: матрциа B, содержащая информацию о кандидатах, указатель на массив для записи списка диссонансов Discords
	Выходные данные: записанные в массив Discords диссонансы
*/
void getDiscords(bool ** B, int *candidats, int *Discords, int H, int *D, int p);

/*
refinement
	Предназначена для реализации фазы отсеивания диссонансов
	Входные данные: матрица подпоследовательностей S, матрица кандидатов С, список кандидатов Candidats, диапазон определения диссонанса r, 
		указатель на массив для записи списка диссонансов Discords
	Выходные данные: записанные в массив Discords диссонансы, их количество, записанное в переменную D
*/
void refinement(float **S, float *C, int *Candidats, int *Discords, float r, int N, int n, int H, int *D, int p, int add);